// <auto-generated />
using System;
using EBANK.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EBANK.Migrations
{
    [DbContext(typeof(OOADContext))]
    partial class OOADContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EBANK.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("EBANK.Models.Adresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adresa");
                });

            modelBuilder.Entity("EBANK.Models.Bankar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MjestoZaposlenjaId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MjestoZaposlenjaId");

                    b.ToTable("Bankar");
                });

            modelBuilder.Entity("EBANK.Models.Bankomat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresaId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdresaId");

                    b.ToTable("Bankomat");
                });

            modelBuilder.Entity("EBANK.Models.Filijala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresaId")
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdresaId");

                    b.ToTable("Filijala");
                });

            modelBuilder.Entity("EBANK.Models.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresaId")
                        .HasColumnType("int");

                    b.Property<string>("BrojLicneKarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spol")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeDodavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zanimanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdresaId");

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("EBANK.Models.Kredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("IsplaceniIznos")
                        .HasColumnType("real");

                    b.Property<float>("Iznos")
                        .HasColumnType("real");

                    b.Property<float>("KamatnaStopa")
                        .HasColumnType("real");

                    b.Property<DateTime>("PocetakOtplate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RacunId")
                        .HasColumnType("int");

                    b.Property<int>("RokOtplate")
                        .HasColumnType("int");

                    b.Property<int>("StatusKredita")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RacunId");

                    b.ToTable("Kredit");
                });

            modelBuilder.Entity("EBANK.Models.Novost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Prikazana")
                        .HasColumnType("bit");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeDodavanja")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Novost");
                });

            modelBuilder.Entity("EBANK.Models.Racun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<float>("StanjeRacuna")
                        .HasColumnType("real");

                    b.Property<int>("VrstaRacuna")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("EBANK.Models.Transakcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Iznos")
                        .HasColumnType("real");

                    b.Property<int>("NaRacunId")
                        .HasColumnType("int");

                    b.Property<int>("NacinTransakcije")
                        .HasColumnType("int");

                    b.Property<int>("SaRacunaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vrijeme")
                        .HasColumnType("datetime2");

                    b.Property<int>("VrstaTransakcije")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NaRacunId");

                    b.HasIndex("SaRacunaId");

                    b.ToTable("Transakcija");
                });

            modelBuilder.Entity("EBANK.Models.ZahtjevZaKredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BracnoStanje")
                        .HasColumnType("int");

                    b.Property<int>("BrojNekretnina")
                        .HasColumnType("int");

                    b.Property<float>("BrojNeplacenihDugova")
                        .HasColumnType("real");

                    b.Property<bool>("ImaNeplacenihDugova")
                        .HasColumnType("bit");

                    b.Property<float>("Iznos")
                        .HasColumnType("real");

                    b.Property<float>("KamatnaStopa")
                        .HasColumnType("real");

                    b.Property<float>("MjesecniPrihodi")
                        .HasColumnType("real");

                    b.Property<string>("NamjenaKredita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivPoslodavca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivRadnogMjesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ProsjecniTroskoviDomacinstva")
                        .HasColumnType("real");

                    b.Property<int?>("RacunId")
                        .HasColumnType("int");

                    b.Property<int>("RadniStaz")
                        .HasColumnType("int");

                    b.Property<int>("RokOtplate")
                        .HasColumnType("int");

                    b.Property<int>("StatusZahtjeva")
                        .HasColumnType("int");

                    b.Property<string>("SupruznikIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupruznikPrezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupruznikZanimanje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RacunId");

                    b.ToTable("ZahtjevZaKredit");
                });

            modelBuilder.Entity("EBANK.Models.Bankar", b =>
                {
                    b.HasOne("EBANK.Models.Adresa", "MjestoZaposlenja")
                        .WithMany()
                        .HasForeignKey("MjestoZaposlenjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EBANK.Models.Bankomat", b =>
                {
                    b.HasOne("EBANK.Models.Adresa", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EBANK.Models.Filijala", b =>
                {
                    b.HasOne("EBANK.Models.Adresa", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EBANK.Models.Klijent", b =>
                {
                    b.HasOne("EBANK.Models.Adresa", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EBANK.Models.Kredit", b =>
                {
                    b.HasOne("EBANK.Models.Racun", "Racun")
                        .WithMany()
                        .HasForeignKey("RacunId");
                });

            modelBuilder.Entity("EBANK.Models.Racun", b =>
                {
                    b.HasOne("EBANK.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EBANK.Models.Transakcija", b =>
                {
                    b.HasOne("EBANK.Models.Racun", "NaRacun")
                        .WithMany()
                        .HasForeignKey("NaRacunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBANK.Models.Racun", "SaRacuna")
                        .WithMany()
                        .HasForeignKey("SaRacunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EBANK.Models.ZahtjevZaKredit", b =>
                {
                    b.HasOne("EBANK.Models.Racun", "Racun")
                        .WithMany()
                        .HasForeignKey("RacunId");
                });
#pragma warning restore 612, 618
        }
    }
}
